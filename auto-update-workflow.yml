name: Sync Whoop Data to Obsidian

on:
  schedule:
    # Run daily at 6:15 AM UTC
    - cron: '15 6 * * *'
  workflow_dispatch:
    inputs:
      days_back:
        description: 'Number of days to sync'
        required: false
        default: '7'

permissions:
  contents: write
  actions: write
  secrets: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PA_TOKEN || github.token }}
        
      - name: Sync Whoop data
        id: whoop-sync
        uses: MajorAaron/whoop-obsidian-sync-action@main
        with:
          whoop_client_id: ${{ secrets.WHOOP_CLIENT_ID }}
          whoop_client_secret: ${{ secrets.WHOOP_CLIENT_SECRET }}
          whoop_refresh_token: ${{ secrets.WHOOP_REFRESH_TOKEN }}
          days_back: ${{ github.event.inputs.days_back || '7' }}
          output_path: 'WHOOP'
          create_readme: 'true'
          debug: 'false'
          
      - name: Update refresh token if rotated
        if: steps.whoop-sync.outputs.new_refresh_token
        env:
          GH_TOKEN: ${{ secrets.PA_TOKEN }}
        run: |
          echo "🔄 Refresh token was rotated, updating secret..."
          
          # Store the new token
          NEW_TOKEN="${{ steps.whoop-sync.outputs.new_refresh_token }}"
          
          # Update the secret
          gh secret set WHOOP_REFRESH_TOKEN \
            --body "$NEW_TOKEN" \
            --repo ${{ github.repository }}
          
          # Verify the update
          echo "✅ Refresh token updated successfully"
          echo "📋 Token details:"
          echo "  - Last 8 chars of new token: ...${NEW_TOKEN: -8}"
          echo "  - Token length: ${#NEW_TOKEN} characters"
          echo "  - Update timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          
          # Log to step summary for visibility
          echo "### 🔄 Token Rotation" >> $GITHUB_STEP_SUMMARY
          echo "Refresh token was successfully rotated and updated at $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are changes to commit
          if [[ -n $(git status -s) ]]; then
            git add .
            git commit -m "Sync Whoop data - ${{ steps.whoop-sync.outputs.sync_summary || 'Daily sync' }}"
            git push
            echo "✅ Changes committed and pushed"
          else
            echo "No changes to commit"
          fi
          
      - name: Summary
        if: always()
        run: |
          echo "## Whoop Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.whoop-sync.outputs.notes_created }}" ]; then
            echo "📝 **Notes Created/Updated:** ${{ steps.whoop-sync.outputs.notes_created }}" >> $GITHUB_STEP_SUMMARY
            echo "😴 **Sleep Records:** ${{ steps.whoop-sync.outputs.sleep_records }}" >> $GITHUB_STEP_SUMMARY
            echo "💪 **Recovery Records:** ${{ steps.whoop-sync.outputs.recovery_records }}" >> $GITHUB_STEP_SUMMARY
            echo "🏃 **Workout Records:** ${{ steps.whoop-sync.outputs.workout_records }}" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${{ steps.whoop-sync.outputs.new_refresh_token }}" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🔄 **Token Rotated:** Refresh token was automatically updated" >> $GITHUB_STEP_SUMMARY
          fi