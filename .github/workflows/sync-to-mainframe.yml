name: Sync Whoop to Dropbox

on:
  schedule:
    # Run daily at 6:00 AM UTC (1:00 AM EST / 2:00 AM EDT)
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      days_back:
        description: 'Number of days to sync (default: 7)'
        required: false
        default: '7'
        type: string
      start_date:
        description: 'Start date (YYYY-MM-DD) - overrides days_back'
        required: false
        type: string
      end_date:
        description: 'End date (YYYY-MM-DD) - overrides days_back'
        required: false
        type: string

jobs:
  sync-whoop-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout sync action
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Sync Whoop Data to Dropbox
        id: whoop-sync
        continue-on-error: true
        env:
          # Whoop OAuth credentials
          WHOOP_CLIENT_ID: ${{ secrets.WHOOP_CLIENT_ID }}
          WHOOP_CLIENT_SECRET: ${{ secrets.WHOOP_CLIENT_SECRET }}
          WHOOP_REFRESH_TOKEN: ${{ secrets.WHOOP_REFRESH_TOKEN }}
          WHOOP_REDIRECT_URI: ${{ secrets.WHOOP_REDIRECT_URI || 'http://localhost:3000/api/auth/callback' }}
          
          # Dropbox OAuth credentials
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          
          # Sync configuration
          DROPBOX_PATH: /WHOOP
          DAYS_BACK: ${{ github.event.inputs.days_back || '7' }}
          START_DATE: ${{ github.event.inputs.start_date }}
          END_DATE: ${{ github.event.inputs.end_date }}
        run: node src/index.js
      
      - name: Update Whoop refresh token if rotated
        if: steps.whoop-sync.outputs.new_refresh_token != ''
        env:
          GH_TOKEN: ${{ secrets.PA_TOKEN }}
        run: |
          gh secret set WHOOP_REFRESH_TOKEN \
            --body "${{ steps.whoop-sync.outputs.new_refresh_token }}" \
            --repo ${{ github.repository }}
      
      - name: Update Dropbox access token if refreshed
        if: steps.whoop-sync.outputs.new_dropbox_access_token != ''
        env:
          GH_TOKEN: ${{ secrets.PA_TOKEN }}
        run: |
          gh secret set DROPBOX_ACCESS_TOKEN \
            --body "${{ steps.whoop-sync.outputs.new_dropbox_access_token }}" \
            --repo ${{ github.repository }}
      
      - name: Update Dropbox refresh token if rotated
        if: steps.whoop-sync.outputs.new_dropbox_refresh_token != ''
        env:
          GH_TOKEN: ${{ secrets.PA_TOKEN }}
        run: |
          gh secret set DROPBOX_REFRESH_TOKEN \
            --body "${{ steps.whoop-sync.outputs.new_dropbox_refresh_token }}" \
            --repo ${{ github.repository }}
      
      - name: Check sync result
        if: steps.whoop-sync.outcome == 'failure'
        run: |
          echo "‚ùå Sync step failed but token updates were processed"
          exit 1